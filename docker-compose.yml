version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: doc-analysis-postgres
    environment:
      POSTGRES_DB: doc_analysis
      POSTGRES_USER: doc_user
      POSTGRES_PASSWORD: doc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U doc_user -d doc_analysis"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis (带持久化)
  redis:
    image: redis:7-alpine
    container_name: doc-analysis-redis
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # ChromaDB 向量数据库
  chromadb:
    image: chromadb/chroma:1.0.5
    container_name: doc-analysis-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "timeout 5s bash -c '</dev/tcp/localhost/8000' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # 后端服务
  backend:
    build: ./backend
    container_name: doc-analysis-backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://doc_user:doc_password@postgres:5432/doc_analysis
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=qwen3:8b
      - OLLAMA_EMBEDDING_MODEL=nomic-embed-text:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    restart: unless-stopped

  # Celery Worker 服务
  celery-worker:
    build: ./backend
    container_name: doc-analysis-celery-worker
    working_dir: /app
    command: celery -A tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://doc_user:doc_password@postgres:5432/doc_analysis
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - PYTHONPATH=/app
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=qwen3:8b
      - OLLAMA_EMBEDDING_MODEL=nomic-embed-text:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    restart: unless-stopped
    
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chroma_data:
    driver: local
  uploads_data:
    driver: local

networks:
  default:
    name: doc-analysis-network