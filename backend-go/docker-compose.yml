version: '3.8'

services:
  # Redis (任务队列)
  redis:
    image: redis:7-alpine
    container_name: doc-analysis-redis-go
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # ChromaDB 向量数据库
  chromadb:
    image: chromadb/chroma:latest
    container_name: doc-analysis-chromadb-go
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/heartbeat || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Go 后端服务
  backend-go:
    build: 
      context: ./backend-go
      dockerfile: Dockerfile
    container_name: doc-analysis-backend-go
    ports:
      - "8081:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - DATABASE_DRIVER=sqlite
      - DATABASE_URL=/app/data.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    depends_on:
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
      - sqlite_data:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  chroma_data:
    driver: local
  uploads_data:
    driver: local
  sqlite_data:
    driver: local

networks:
  default:
    name: doc-analysis-go-network